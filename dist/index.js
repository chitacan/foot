// Generated by CoffeeScript 1.9.0
(function() {
  var app;

  app = angular.module('footApp', []);

  app.config(function($httpProvider) {
    return delete $httpProvider.defaults.headers.common['X-Requested-With'];
  });

  app.controller('audioCtrl', function($scope, program, _) {
    program.sync().then(function(res) {
      var list, resource;
      console.log(res);
      list = res.list.data.results.collection1.message;
      resource = res.info.data.results.resources;
      return $scope.programs = _.map(list, function(v, k) {
        return _.extend(v, resource[k]);
      });
    })["catch"](function(e) {
      return console.error(e);
    });
    $scope.onClickList = function(program) {
      if (program.status === 4) {
        this.player.load(program.url);
        return this.player.play();
      }
    };
    return audiojs.events.ready(function() {
      var p;
      p = audiojs.createAll();
      $scope.player = p[0];
      p[0].element.addEventListener('pause', function() {
        return console.log('paused');
      });
      p[0].element.addEventListener('play', function() {
        return console.log('play');
      });
      p[0].element.addEventListener('error', function() {
        return console.log('error');
      });
      return p[0].element.addEventListener('suspend', function() {
        return console.log('suspend');
      });
    });
  });

  app.service('program', function($http, $q) {
    this.list = function() {
      var req;
      req = {
        method: 'GET',
        url: 'https://www.kimonolabs.com/api/3kplvmje',
        params: {
          apikey: 'YmPUBuAN7hpEa3LbfEsA5zAgdEs0qcuW',
          kimmodify: '1'
        }
      };
      return $http(req);
    };
    this.info = function() {
      var req;
      req = {
        method: 'GET',
        url: 'https://www.kimonolabs.com/api/ciqlk7me',
        params: {
          apikey: 'YmPUBuAN7hpEa3LbfEsA5zAgdEs0qcuW'
        }
      };
      return $http(req);
    };
    this.sync = function() {
      return $q.all({
        list: this.list(),
        info: this.info()
      });
    };
    return this;
  });

  app.factory('_', function() {
    return window._;
  });

  app.filter('trusted', function($sce) {
    return function(url) {
      return $sce.trustAsResourceUrl(url);
    };
  });

}).call(this);
